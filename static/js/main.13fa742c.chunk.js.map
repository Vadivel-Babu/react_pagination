{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesQnt","Math","ceil","pages","lastPage","firstPage","prevPage","nextPage","pageChangeHandler","page","className","classNames","disabled","href","onClick","map","active","items","App","useState","setPerPage","setCurrentPage","maxItemOnPage","firstItemOnPage","lastItemOnPage","id","value","onChange","event","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EACFJ,EAAQC,IAAY,EAAID,EAAQC,EAAUI,KAAKC,KAAKN,EAAQC,GAC1DM,EAAQd,EAAW,EAAGW,GAEtBI,EAAWN,IAAgBE,EAC3BK,EAA4B,IAAhBP,EACZQ,EAAWR,EAAc,EACzBS,EAAWT,EAAc,EAEzBU,EAAoB,SAACC,GACrBA,EAAOT,GAAYS,EAAO,GAI9BV,EAAaU,IAGf,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUP,IAAnD,SACE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMP,GACV,gBAAeD,EACfS,QAAS,kBAAMN,EAAkBF,IALnC,oBAUDH,EAAMY,KAAI,SAACN,GAAD,OACT,oBAEEC,UAAWC,IAAW,YAAa,CACjCK,OAAQlB,IAAgBW,IAH5B,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMf,EAAaU,IAJ9B,SAMGA,KAXEA,MAeT,oBAAIC,UAAWC,IAAW,YAAa,CAAEC,SAAUR,IAAnD,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMN,GACV,gBAAeH,EACfU,QAAS,kBAAMN,EAAkBD,IALnC,0BC1DJU,EAAQ5B,EAAW,EAAG,IAAI0B,KAAI,SAACtB,GAAD,qBAAeA,MAEtCyB,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlBvB,EAAP,oBACA,EAA8BuB,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KAMMC,EAAgBzB,EAAUC,EAC1ByB,EAAkBD,EAAgBzB,EAClC2B,EAAiBF,EAAgB1B,EAAQA,EAAQ0B,EAEvD,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBAEIyB,EAAkB,EAFtB,cAGQC,EAHR,eAG6B5B,EAH7B,OAMA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAO7B,EACP8B,SAAU,SAACC,GACTR,GAAYQ,EAAMC,OAAOH,OACzBL,EAAe,IAPnB,UAUE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEd,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA/Ce,SAACU,GACpBY,EAAeZ,MAiDb,6BACGQ,EAAMc,MAAMR,EAAiBC,GAAgBT,KAAI,SAACiB,GAAD,OAChD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.13fa742c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesQnt\n    = total % perPage === 0 ? total / perPage : Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesQnt);\n\n  const lastPage = currentPage === pagesQnt;\n  const firstPage = currentPage === 1;\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n\n  const pageChangeHandler = (page: number) => {\n    if (page > pagesQnt || page < 1) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: firstPage })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${prevPage}`}\n            aria-disabled={firstPage}\n            onClick={() => pageChangeHandler(prevPage)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={classNames('page-item', {\n              active: currentPage === page,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={classNames('page-item', { disabled: lastPage })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${nextPage}`}\n            aria-disabled={lastPage}\n            onClick={() => pageChangeHandler(nextPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const maxItemOnPage = perPage * currentPage;\n  const firstItemOnPage = maxItemOnPage - perPage;\n  const lastItemOnPage = maxItemOnPage > total ? total : maxItemOnPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${\n          firstItemOnPage + 1\n        } - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {items.slice(firstItemOnPage, lastItemOnPage).map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}